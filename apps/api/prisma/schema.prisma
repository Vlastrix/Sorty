generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?  // Nombre completo del usuario
  role      UserRole @default(ASSET_RESPONSIBLE)
  isActive  Boolean  @default(true) // Estado del usuario
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relación con activos creados
  createdAssets Asset[] @relation("AssetCreator")
  
  // Relación con activos asignados (para responsables)
  assignedAssets Asset[] @relation("AssetAssignment")
  
  // Relación con historial de asignaciones
  assignmentsReceived AssetAssignment[] @relation("AssignmentReceiver")
  assignmentsMade     AssetAssignment[] @relation("AssignmentCreator")
  
  @@map("users")
}

enum UserRole {
  ADMIN              // Administrador: gestión total
  INVENTORY_MANAGER  // Encargado de inventario: alta, baja, actualización de activos
  ASSET_RESPONSIBLE  // Responsable de activo: visualización de activos asignados
}

model Category {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relación jerárquica para subcategorías
  parentId    String?
  parent      Category? @relation("CategoryHierarchy", fields: [parentId], references: [id])
  subcategories Category[] @relation("CategoryHierarchy")
  
  // Relación con activos
  assets      Asset[]
  
  @@map("categories")
}

model Asset {
  id            String      @id @default(cuid())
  code          String      @unique // Código único del activo
  name          String
  description   String?
  
  // Información técnica
  brand         String?     // Marca
  model         String?     // Modelo  
  serialNumber  String?     // Número de serie
  
  // Datos contables
  acquisitionCost Decimal   // Costo de adquisición
  purchaseDate    DateTime  // Fecha de compra
  supplier        String?   // Proveedor
  usefulLife      Int       // Vida útil en años
  residualValue   Decimal   @default(0) // Valor residual
  
  // Ubicación física
  building      String?     // Edificio
  office        String?     // Oficina
  laboratory    String?     // Laboratorio
  location      String?     // Ubicación general
  
  // Estado del activo
  status        AssetStatus @default(AVAILABLE)
  
  // Relaciones
  categoryId    String
  category      Category    @relation(fields: [categoryId], references: [id])
  
  // Asignación de responsable
  assignedToId  String?
  assignedTo    User?       @relation("AssetAssignment", fields: [assignedToId], references: [id])
  assignedAt    DateTime?   // Fecha de asignación
  
  // Ubicación actual del activo
  currentLocation String?   // Ubicación actual detallada
  
  // Relación con historial de asignaciones
  assignments   AssetAssignment[]
  
  // Auditoría
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  createdById   String
  createdBy     User        @relation("AssetCreator", fields: [createdById], references: [id])
  
  @@map("assets")
}

enum AssetStatus {
  AVAILABLE     // Disponible
  IN_USE        // En uso
  IN_REPAIR     // En reparación
  DECOMMISSIONED // Dado de baja
}

model AssetAssignment {
  id            String            @id @default(cuid())
  
  // Activo asignado
  assetId       String
  asset         Asset             @relation(fields: [assetId], references: [id], onDelete: Cascade)
  
  // Usuario que recibe el activo
  assignedToId  String
  assignedTo    User              @relation("AssignmentReceiver", fields: [assignedToId], references: [id])
  
  // Usuario que realiza la asignación (admin o encargado)
  assignedById  String
  assignedBy    User              @relation("AssignmentCreator", fields: [assignedById], references: [id])
  
  // Ubicación donde se encuentra el activo
  location      String?
  
  // Razón de la asignación o transferencia
  reason        String?
  
  // Fechas importantes
  assignedAt    DateTime          @default(now())
  returnedAt    DateTime?
  
  // Estado de la asignación
  status        AssignmentStatus  @default(ACTIVE)
  
  // Notas adicionales
  notes         String?
  
  @@map("asset_assignments")
}

enum AssignmentStatus {
  ACTIVE        // Asignación activa
  RETURNED      // Activo devuelto
  TRANSFERRED   // Activo transferido a otro responsable
}